// <autogenerated>
//    This code was generated by FxKit. Manual edits will not be saved.
// </autogenerated>
#nullable enable
using System;

namespace EnumTest.PrettyCool;

public static partial class MyEnumMatchExtension
{
    /// <summary>
    ///     Perform an exhaustive match on the enum value.
    /// </summary>
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public static TMatchResult Match<TMatchResult>(
        this EnumTest.PrettyCool.MyEnum source,
        Func<TMatchResult> One,
        Func<TMatchResult> Two,
        Func<TMatchResult> Three) => source switch
        {
            EnumTest.PrettyCool.MyEnum.One => One(),
            EnumTest.PrettyCool.MyEnum.Two => Two(),
            EnumTest.PrettyCool.MyEnum.Three => Three(),
            _ => throw new ArgumentOutOfRangeException(nameof(source), source, null)
        };

    /// <summary>
    ///     Perform an exhaustive match on the enum value.
    /// </summary>
    [System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    public static TMatchResult Match<TMatchResult>(
        this EnumTest.PrettyCool.MyEnum source,
        TMatchResult One,
        TMatchResult Two,
        TMatchResult Three) => source switch
        {
            EnumTest.PrettyCool.MyEnum.One => One,
            EnumTest.PrettyCool.MyEnum.Two => Two,
            EnumTest.PrettyCool.MyEnum.Three => Three,
            _ => throw new ArgumentOutOfRangeException(nameof(source), source, null)
        };
}
