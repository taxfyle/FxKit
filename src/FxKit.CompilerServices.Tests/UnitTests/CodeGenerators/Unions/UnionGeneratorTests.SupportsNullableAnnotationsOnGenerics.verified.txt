// <autogenerated>
//    This code was generated by FxKit. Manual edits will not be saved.
// </autogenerated>
#nullable enable
using System;
using System.Diagnostics;
using System.Diagnostics.CodeAnalysis;
using System.Runtime.CompilerServices;

namespace Super.Duper.Unions;

public abstract partial record TerribleOption<T>
{
    public sealed partial record Probably : TerribleOption<T>
    {
        /// <summary>
        ///     The same as "new Probably" but the return type is that of the base type.
        /// </summary>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        [ExcludeFromCodeCoverage]
        [DebuggerHidden]
        public static TerribleOption<T> Of(
            T? Value) =>
            new Probably(
                Value);

        /// <summary>
        ///     A Func variant for 'Of'
        /// </summary>
        public static readonly Func<T?, TerribleOption<T>> λ = Of;
    }

    public sealed partial record None : TerribleOption<T>
    {
        /// <summary>
        ///     The same as "new None" but the return type is that of the base type.
        /// </summary>
        [MethodImpl(MethodImplOptions.AggressiveInlining)]
        [ExcludeFromCodeCoverage]
        [DebuggerHidden]
        public static TerribleOption<T> Of() =>
            new None();

        /// <summary>
        ///     A Func variant for 'Of'
        /// </summary>
        public static readonly Func<TerribleOption<T>> λ = Of;
    }

    /// <summary>
    ///     Performs an exhaustive match on the union constituents.
    /// </summary>
    public TResult Match<TResult>(
        Func<Probably, TResult> Probably,
        Func<None, TResult> None) => this switch
    {
        TerribleOption<T>.Probably x => Probably(x),
        TerribleOption<T>.None x => None(x),
        _ => throw new ArgumentOutOfRangeException(message: $"The type '{this.GetType()}' is not a known variant of TerribleOption", innerException: null)
    };
}